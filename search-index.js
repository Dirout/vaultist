var searchIndex = JSON.parse('{\
"vaultist":{"doc":"","t":[4,13,3,3,13,3,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CorrectHorseBatteryStapleElements","DIGIT","ELEMENTS","Entry","SEPARATOR","SIMILAR_CHARACTERS","SYMBOLS","Secret","Vault","WORD","add_item","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contents","correct_horse_battery_staple","create_vault_from_password","decrypt_bytes","decrypt_secret","deduplicate_items","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","encrypt_bytes","encrypt_secret","entry","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","generate_key_from_password_and_salt","generate_nonce","get_hash","get_password_feedback","hash","hash","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","items","key","last_modified","mul","name","new","new","new","nonce","partial_cmp","partial_cmp","partial_cmp","rem","remove_item","salt","serialize","serialize","serialize","shl","shr","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroize","zeroize"],"q":["vaultistd":["The possible elements of a <code>CorrectHorseBatteryStaple</code>-type …","A digit character","The possible non-separator elements of a …","An entry in the vault","A separator character","A vector of similar-looking characters","A vector of symbol characters","An encrypted entry held within the vault","A vault for storing secrets","An English-language word","Adds an item into a vault.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The secret, encrypted information","Generate a <code>CorrectHorseBatteryStaple</code>-style password. …","Create a new vault from a user-supplied password.","Decrypt a byte array using the vault’s key.","Decrypt a secret from the vault.","Sorts entries by their last modified date &amp; time, and then …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encrypt a byte array using a vault’s key.","Encrypt an entry into the vault.","The metadata of the secret","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Generate a vault’s key from a user-supplied password and …","Generates a random nonce for use with the …","","Analyses whether or not a password is sufficiently …","","The hash of the entry’s contents","The ID of the entry","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The entries representing the secrets (and the nonces used …","The key of the vault","The date &amp; time when the entry was last modified","","The name of an entry","","","","The nonce used to encrypt the secret","","","","","Remove an item from a vault.","The salt applied to the vault’s password","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,30,0,0,30,0,0,0,0,30,1,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,1,2,6,1,2,6,6,0,0,0,0,1,1,2,6,30,11,11,12,12,13,13,1,2,6,30,11,12,13,1,2,6,1,2,6,2,30,11,12,13,1,1,2,6,6,0,1,6,1,2,6,1,2,6,30,11,12,13,1,1,2,2,6,6,0,0,2,0,2,2,2,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,1,1,2,2,2,1,2,6,6,1,2,6,2,1,1,1,2,6,2,2,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,30,11,12,13,1,2,6,1,6],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[6,6],[[]],[[]],[[]],0,[[7,7,8,8,8,8,8,8],[[4,[9]]]],[9,1],[[9,10],[[4,[3]]]],[[9,[4,[3]],[4,[3]]],6],[[1,8]],[[],1],[[],2],[[],6],[7],[7],[11,4],[7],[12,4],[7],[13,4],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[],[[14,[1]]]],[[],[[14,[2]]]],[[],[[14,[6]]]],[[2,15],2],[7],[7],[7],[7],[7],[1],[7],[6],[7],[9,[[4,[3]]]],[[1,6],[[4,[3]]]],0,[[1,1],8],[[2,2],8],[[6,6],8],[[1,16],17],[[2,16],17],[[6,16],17],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[],2],[[]],[[],6],[[9,18]],[[],10],[[],19],[9],[2],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[[[21,[20]]],[[21,[5,20]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[22,[[22,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],[23,[[23,[5]]]],0,0,0,[[2,15],2],0,[[[4,[3]],9,4],1],[[9,24,[4,[3]],[26,[25]]],2],[[2,[4,[3]],[4,[3]]],6],0,[[1,1],[[28,[27]]]],[[2,2],[[28,[27]]]],[[6,6],[[28,[27]]]],[[2,15],2],[[1,2]],0,[1,14],[2,14],[6,14],[[2,15],2],[[2,15],2],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[6]],"p":[[3,"Vault"],[3,"Entry"],[15,"u8"],[3,"Vec"],[8,"Any"],[3,"Secret"],[15,"usize"],[15,"bool"],[3,"String"],[6,"XNonce"],[3,"SYMBOLS"],[3,"SIMILAR_CHARACTERS"],[3,"ELEMENTS"],[4,"Result"],[8,"Copy"],[3,"Formatter"],[6,"Result"],[3,"SaltString"],[15,"u64"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Uuid"],[3,"Utc"],[3,"DateTime"],[4,"Ordering"],[4,"Option"],[3,"TypeId"],[4,"CorrectHorseBatteryStapleElements"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
